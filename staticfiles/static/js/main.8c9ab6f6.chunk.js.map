{"version":3,"sources":["logo.svg","images/topic_science.png","components/Login.js","shared/constants.js","components/SummaryBlock.js","components/CreateQuiz.js","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","react_default","a","createElement","style","margin","Input","placeholder","es","to","Button","color","animated","Content","visible","hidden","Icon","name","BASE_URL","SummaryBlock","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","useEffect","fetch","link","then","response","json","data","console","log","Segment","Container","CreateQuiz","next","goNext","_useState3","_useState4","summary","setSummary","Quiz_default","quiz","shuffle","showDefaultResult","onComplete","obj","concat","method","body","JSON","stringify","student","questions_list","incorrect","numberOfIncorrectAnswers","correct","numberOfCorrectAnswers","onClick","summary_Links","map","window","location","reload","QuizUp","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","questions","loaded","quizTitle","quizSynopsis","question","questionType","answers","correctAnswer","messageForCorrectAnswer","messageForIncorrectAnswer","explanation","_this2","setState","prevProps","prevState","_this3","i","toConsumableArray","summary_text","question_array","_this4","className","visibility","Card","gotoQuiz","Image","src","topic_cover","wrapped","ui","Header","Meta","Description","List","bulleted","Item","extra","Component","App","as","image","logo","content","padding","path","src_components_Quiz","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6RCIjC,SAASC,IACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAAEC,OAAQ,KACnBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOC,YAAY,aACnBN,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SACXR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQN,MAAQ,CAAEC,OAAQ,IAAOM,MAAM,QAAQC,UAAQ,GACnDX,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBC,SAAO,GAAvB,QACAb,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBE,QAAM,GAClBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,KAAK,8ECZtBC,EAAW,gFCGjB,SAASC,EAAaC,GAAO,IAAAC,EACZC,mBAAS,IADGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACvBI,EADuBJ,EAAA,GAYhC,OAVAK,oBAAU,WACFC,MAAMT,EAAMU,MACPC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAAKR,OAEnBK,KAAK,SAAAL,GAAI,OAAGC,EAAQD,MAC1B,CAACN,EAAMU,KAAMJ,IAGZzB,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAAEC,OAAQ,KACnBJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACIrC,EAAAC,EAAAC,cAAA,SAAKuB,MCZlB,SAASa,EAAWnB,GAAO,IAAAC,EACPC,oBAAS,GADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBmB,EADuBjB,EAAA,GACjBkB,EADiBlB,EAAA,GAAAmB,EAEApB,oBAAS,GAFTqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAEvBE,EAFuBD,EAAA,GAEdE,EAFcF,EAAA,GAkB9B,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAAEC,OAAQ,KACnBJ,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CAAM6C,KAAO3B,EAAM2B,KAAOC,SAAU,EAAOC,mBAAoB,EAAQC,WAjBtD,SAAAC,GACrBtB,MAAK,GAAAuB,OAAIlC,EAAJ,oBAAgC,CACjCmC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,QAAS,WACTC,eAAgBtC,EAAMsC,eACtBC,UAAWR,EAAIS,yBACfC,QAASV,EAAIW,2BAElB/B,KAAK,SAAAC,GACJG,QAAQC,IAAIJ,KAEhBS,GAAO,MAMDD,EACEvC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQqD,QAAU,kBAAMlB,GAAW,IAAQzC,MAAQ,CAAEC,OAAQ,IAAOM,MAAM,QAAQC,UAAQ,GACtFX,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBC,SAAO,GAAvB,QACAb,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBE,QAAM,GAClBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,KAAK,kBAIfhB,EAAAC,EAAAC,cAAA,YAENyC,EACE3C,EAAAC,EAAAC,cAAA,WAAOiB,EAAM4C,cAAcC,IAAI,SAAAnC,GAAI,OAAI7B,EAAAC,EAAAC,cAACgB,EAAD,CAAcW,KAAOA,MACxD7B,EAAAC,EAAAC,cAAEO,EAAA,EAAF,CAASN,MAAQ,CAAEC,OAAQ,IAAOM,MAAM,QAAQoD,QAAU,WAAQG,OAAOC,SAASC,UAAaxD,UAAQ,GACnGX,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBC,SAAO,GAAvB,UACAb,EAAAC,EAAAC,cAACO,EAAA,EAAOG,QAAR,CAAgBE,QAAM,GAClBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,KAAK,mBAGbhB,EAAAC,EAAAC,cAAA,uECgIXkE,sBArKb,SAAAA,EAAYjD,GAAO,IAAAkD,EAAA,OAAA9C,OAAA+C,EAAA,EAAA/C,CAAAgD,KAAAH,IACjBC,EAAA9C,OAAAiD,EAAA,EAAAjD,CAAAgD,KAAAhD,OAAAkD,EAAA,EAAAlD,CAAA6C,GAAAM,KAAAH,KAAMpD,KACDwD,MAAQ,CACXlB,eAAgB,GAChBmB,UAAW,GACXC,QAAQ,EACRd,cAAgB,CAAC,IACjBjB,KAAM,CACJgC,UAAW,4BACXC,aACE,uSACFH,UAAW,CACT,CACEI,SAAU,gFACVC,aAAc,OACdC,QAAS,CAAC,kBAAmB,4BAA6B,aAAc,eACxEC,cAAe,IACfC,wBAAyB,4BACzBC,0BAA2B,sCAC3BC,YACE,2OAEJ,CACEN,SAAU,iCACVC,aAAc,OACdC,QAAS,CAAC,mBAAoB,sBAC9BC,cAAe,IACfC,wBAAyB,4BACzBC,0BAA2B,sCAC3BC,YACE,2OAEJ,CACEN,SAAU,qCACVC,aAAc,OACdC,QAAS,CAAC,OAAQ,SAClBC,cAAe,IACfC,wBAAyB,4BACzBC,0BAA2B,sCAC3BC,YACE,2OAEJ,CACEN,SAAU,yDACVC,aAAc,OACdC,QAAS,CAAC,4BAA6B,yBAA0B,qBACjEC,cAAe,IACfC,wBAAyB,4BACzBC,0BAA2B,sCAC3BC,YACE,2OAEJ,CACEN,SAAU,2DACVC,aAAc,QACdC,QAAS,CACP,gDACA,gDACA,gDACA,iDAEFC,cAAe,IACfC,wBAAyB,4BACzBC,0BAA2B,sCAC3BC,YACE,8OAjEOjB,mFAwEC,IAAAkB,EAAAhB,KAClB3C,MAAK,GAAAuB,OAAIlC,EAAJ,oBAAgC,CACnCmC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,QAAS,eAGV1B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJsD,EAAKC,SAAS,CACZ/B,eAAgBxB,EAAK2C,yDAIVa,EAAWC,GAAW,IAAAC,EAAApB,KACnCmB,EAAUjC,iBAAmBc,KAAKI,MAAMlB,gBAC1Cc,KAAKI,MAAMlB,eAAeO,IAAI,SAACgB,EAAUY,GACvC,OAAOhE,MAAK,GAAAuB,OAAIlC,EAAJ,cAAAkC,OAAyB6B,IAClClD,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ0D,EAAKH,SAAS,SAAAE,GACZ,MAAO,CAAEd,UAAS,GAAAzB,OAAA5B,OAAAsE,EAAA,EAAAtE,CAAMmE,EAAUd,WAAhB,CAA2B3C,OAE/CC,QAAQC,IAAIwD,EAAKhB,MAAMC,kDAQ/B,IAAIb,EAAgBQ,KAAKI,MAAMC,UAAUZ,IAAI,SAAAgB,GAC3C,OAAOA,EAASc,eAEdC,EAAiBxB,KAAKI,MAAMC,UAAUZ,IAAI,SAAAgB,GAC5C,MAAO,CACLA,SAAUA,EAASA,SACnBC,aAAc,OACdC,QAAS,CAACF,EAAQ,QAAaA,EAAQ,QAAaA,EAAQ,QAAaA,EAAQ,SACjFG,cAAeH,EAASpB,QAAQ,MAGpCW,KAAKiB,SAAS,CACZ1C,KAAM,CACJgC,UAAW,0BACXC,aAAc,qDACdH,UAAWmB,GAEblB,QAAQ,EACRd,cAAgBA,IAGlB7B,QAAQC,IAAIoC,KAAKI,MAAM7B,uCAGhB,IAAAkD,EAAAzB,KACP,OACEvE,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,QACX1B,KAAKI,MAAME,OACX7E,EAAAC,EAAAC,cAACoC,EAAD,CACEyB,cAAiBQ,KAAKI,MAAMZ,cAC5B5D,MAAQ,CAAE+F,WAAYpF,UACtB2C,eAAiBc,KAAKI,MAAMlB,eAC5BX,KAAOyB,KAAKI,MAAM7B,OAGlB9C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SACPR,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMrC,QAAU,kBAAMkC,EAAKI,aACzBpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOC,IAAMC,IAAcC,SAAO,EAACC,IAAK,IACxCzG,EAAAC,EAAAC,cAACiG,EAAA,EAAKvF,QAAN,KACEZ,EAAAC,EAAAC,cAACiG,EAAA,EAAKO,OAAN,uBACA1G,EAAAC,EAAAC,cAACiG,EAAA,EAAKQ,KAAN,0BACA3G,EAAAC,EAAAC,cAACiG,EAAA,EAAKS,YAAN,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAMC,UAAQ,GACZ9G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKE,KAAN,iBACA/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKE,KAAN,cACA/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKE,KAAN,uBACA/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKE,KAAN,gBACA/G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKE,KAAN,kBAIN/G,EAAAC,EAAAC,cAACiG,EAAA,EAAKvF,QAAN,CAAcoG,OAAK,GACjBhH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,KAAK,iCADb,wBA3JKiG,8BCaNC,MAbf,WACE,OACElH,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,OACbjG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAQS,GAAG,KAAKC,MAAQC,IAAOC,QAAQ,YAAYnH,MAAQ,CAAEoH,QAAS,MACtEvH,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACH,EAAD,CAAOyH,KAAK,MACZxH,EAAAC,EAAAC,cAACuH,EAAD,CAAQD,KAAK,aCFDE,QACW,cAA7BzD,OAAOC,SAASyD,UAEe,UAA7B1D,OAAOC,SAASyD,UAEhB1D,OAAOC,SAASyD,SAASC,MACvB,kECXNC,IAASC,OAAO9H,EAAAC,EAAAC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtG,KAAK,SAAAuG,GACjCA,EAAaC","file":"static/js/main.8c9ab6f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bd8bd909.svg\";","module.exports = __webpack_public_path__ + \"static/media/topic_science.7c7e2dd9.png\";","import React from 'react'\nimport { Input, Button, Icon } from 'semantic-ui-react'\nimport {Link} from '@reach/router'\n\nexport function Login() {\n    return (\n        <div style={ { margin: 40 } }>\n            <Input placeholder='Username' />\n            <br /><Link to=\"/quiz\">\n                <Button style={ { margin: 10 } } color='black' animated>\n                    <Button.Content visible>Next</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name='arrow right' />\n                    </Button.Content>\n                </Button>\n            </Link>\n        </div>\n    )\n}","export const BASE_URL = 'http://192.168.43.204:8000/api/v0'","import React, { useState, useEffect}from 'react'\nimport {  Segment, Container} from 'semantic-ui-react'\n\nexport function SummaryBlock(props) {\nconst [text, setText] = useState(\"\")\n    useEffect(() => {\n            fetch(props.link)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                    return data.text\n                })\n            .then(text=> setText(text))\n    }, [props.link, text])\n    \n    return (\n        <div style={ { margin: 40 } }>\n            <Segment>\n                <Container>\n                    <p>{ text }</p>\n                </Container>\n            </Segment>\n            \n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Quiz from 'react-quiz-component';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { SummaryBlock } from './SummaryBlock';\nimport { Link } from '@reach/router';\nimport { BASE_URL } from '../shared/constants';\n\nexport function CreateQuiz(props) {\n    const [next, goNext] = useState(false);\n    const [summary, setSummary] = useState(false);\n    const onCompleteAction = obj => {\n        fetch(`${BASE_URL}/update_ratings/`, {\n            method: 'POST',\n            body: JSON.stringify({\n                student: 'student0',\n                questions_list: props.questions_list,\n                incorrect: obj.numberOfIncorrectAnswers,\n                correct: obj.numberOfCorrectAnswers,\n            }),\n        }).then(response => {\n            console.log(response);\n        });\n        goNext(true);\n    };\n\n    return (\n        <div style={ { margin: 40 } }>\n            <Quiz quiz={ props.quiz } shuffle={ true } showDefaultResult={ false } onComplete={ onCompleteAction } />\n            { next ? (\n                <Button onClick={ () => setSummary(true) } style={ { margin: 10 } } color=\"black\" animated>\n                    <Button.Content visible>Next</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name=\"arrow right\" />\n                    </Button.Content>\n                </Button>\n            ) : (\n                    <div />\n                ) }\n            { summary ? (\n                <div>{ props.summary_Links.map(link => <SummaryBlock link={ link } />) }\n                    < Button style={ { margin: 10 } } color='black' onClick={ () => { window.location.reload() } } animated>\n                        <Button.Content visible>Reload</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow right' />\n                        </Button.Content>\n                    </Button>\n                </div>) : <div />\n            }\n\n        </div >\n    );\n}\n","import React, { Component } from 'react';\nimport { BASE_URL } from '../shared/constants';\nimport { CreateQuiz } from './CreateQuiz';\nimport { Card, Icon, List, Image } from 'semantic-ui-react';\nimport { Link } from '@reach/router'\nimport { hidden } from 'ansi-colors';\nimport topic_cover from '../images/topic_science.png';\nimport './Quiz.css'\nclass QuizUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions_list: [],\n      questions: [],\n      loaded: false,\n      summary_Links : [''],\n      quiz: {\n        quizTitle: 'React Quiz Component Demo',\n        quizSynopsis:\n          'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim',\n        questions: [\n          {\n            question: 'How can you access the state of a component from inside of a member function?',\n            questionType: 'text',\n            answers: ['this.getState()', 'this.prototype.stateValue', 'this.state', 'this.values'],\n            correctAnswer: '3',\n            messageForCorrectAnswer: 'Correct answer. Good job.',\n            messageForIncorrectAnswer: 'Incorrect answer. Please try again.',\n            explanation:\n              'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          },\n          {\n            question: 'ReactJS is developed by _____?',\n            questionType: 'text',\n            answers: ['Google Engineers', 'Facebook Engineers'],\n            correctAnswer: '2',\n            messageForCorrectAnswer: 'Correct answer. Good job.',\n            messageForIncorrectAnswer: 'Incorrect answer. Please try again.',\n            explanation:\n              'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          },\n          {\n            question: 'ReactJS is an MVC based framework?',\n            questionType: 'text',\n            answers: ['True', 'False'],\n            correctAnswer: '2',\n            messageForCorrectAnswer: 'Correct answer. Good job.',\n            messageForIncorrectAnswer: 'Incorrect answer. Please try again.',\n            explanation:\n              'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          },\n          {\n            question: 'Which of the following concepts is/are key to ReactJS?',\n            questionType: 'text',\n            answers: ['Component-oriented design', 'Event delegation model', 'Both of the above'],\n            correctAnswer: '3',\n            messageForCorrectAnswer: 'Correct answer. Good job.',\n            messageForIncorrectAnswer: 'Incorrect answer. Please try again.',\n            explanation:\n              'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          },\n          {\n            question: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit,',\n            questionType: 'photo',\n            answers: [\n              'https://dummyimage.com/600x400/000/fff&text=A',\n              'https://dummyimage.com/600x400/000/fff&text=B',\n              'https://dummyimage.com/600x400/000/fff&text=C',\n              'https://dummyimage.com/600x400/000/fff&text=D',\n            ],\n            correctAnswer: '1',\n            messageForCorrectAnswer: 'Correct answer. Good job.',\n            messageForIncorrectAnswer: 'Incorrect answer. Please try again.',\n            explanation:\n              'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          },\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${BASE_URL}/show_questions/`, {\n      method: 'POST',\n      body: JSON.stringify({\n        student: 'student0',\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          questions_list: data.questions,\n        });\n      });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.questions_list !== this.state.questions_list) {\n      this.state.questions_list.map((question, i) => {\n        return fetch(`${BASE_URL}/question/${question}`)\n          .then(response => response.json())\n          .then(data => {\n            this.setState(prevState => {\n              return { questions: [...prevState.questions, data] };\n            });\n            console.log(this.state.questions);\n          });\n      });\n    }\n  }\n\n  gotoQuiz() {\n    // console.log(this.state)\n    let summary_Links = this.state.questions.map(question => {\n      return question.summary_text\n    })\n    let question_array = this.state.questions.map(question => {\n      return {\n        question: question.question,\n        questionType: 'text',\n        answers: [question['option1'], question['option2'], question['option3'], question['option4']],\n        correctAnswer: question.correct[6],\n      };\n    });\n    this.setState({\n      quiz: {\n        quizTitle: 'Science Human Body Quiz',\n        quizSynopsis: 'Topics for Quiz include - Cells , Tissues, Organs ',\n        questions: question_array,\n      },\n      loaded: true,\n      summary_Links : summary_Links\n    });\n\n    console.log(this.state.quiz);\n  }\n\n  render() {\n    return (\n      <div className='quiz'>\n        { this.state.loaded ? (\n          <CreateQuiz\n            summary_Links = {this.state.summary_Links}\n            style={ { visibility: hidden } }\n            questions_list={ this.state.questions_list }\n            quiz={ this.state.quiz }\n          />\n        ) : (\n            <Link to='/quiz'>\n              <Card onClick={ () => this.gotoQuiz() }>\n                <Image src={ topic_cover } wrapped ui={ false } />\n                <Card.Content>\n                  <Card.Header>The Human Body</Card.Header>\n                  <Card.Meta>Class V - Science</Card.Meta>\n                  <Card.Description>\n                    <List bulleted>\n                      <List.Item>Our Body</List.Item>\n                      <List.Item>Cells</List.Item>\n                      <List.Item>Types of Cells</List.Item>\n                      <List.Item>Tissues</List.Item>\n                      <List.Item>Organs</List.Item>\n                    </List>\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Icon name=\"arrow alternate circle right\" />\n                  Start Quiz\n\t\t\t\t\t\t</Card.Content>\n              </Card>\n            </Link>\n          ) }\n      </div>\n    );\n  }\n}\nexport default QuizUp;\n","import React from 'react';\nimport logo from './logo.svg';\nimport {Router} from '@reach/router'\nimport { Login } from './components/Login'\nimport QuizUp from './components/Quiz'\nimport { Header } from 'semantic-ui-react'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header as='h2' image={ logo } content='Level Up!' style={ { padding: 10 } } />\n      <Router>\n        <Login path=\"/\" />\n        <QuizUp path=\"/quiz\" />\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}